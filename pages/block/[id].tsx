import AppLayout from "@Components/Layout/AppLayout";
import Head from "next/head";
import React from "react";
import { YY_MM_DD_HH_mm_ss } from "@Utils/constants";
import moment from "moment";
import { request } from "@Pages/api/handler";
import styles from "@Styles/Home.module.css";
import { useRouter } from "next/router";
import Link from "next/link";

const BlockDetail = () => {
  const [queryId, $queryId] = React.useState<any | null>("");
  const [block, setBlock] = React.useState<any | null>({});
  const [transactions, setTransactions] = React.useState<any | null>([]);
  const router = useRouter();

  React.useEffect(() => {
    const { query } = router;
    if (query?.id) {
      const { id } = query;
      $queryId(id);
    }
  }, [router]);

  const getDetailBlock = async () => {
    if (queryId) {
      const result = await request.getBlockDetail(queryId);
      return result;
    }
  };

  React.useEffect(() => {
    getDetailBlock().then((res) => setBlock(res?.data));
  }, [queryId]);

  const getBlockTransaction = async () => {
    if (queryId) {
      const result = await request.getBlockTransactions(queryId);
      return result;
    }
  };

  React.useEffect(() => {
    getBlockTransaction().then((res) => setTransactions(res?.data));
  }, [queryId]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Block - GoChain Explorer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppLayout>
        <div className="container">
          <div className="card">
            <div className="card-body">
              <div className="card-title">
                <img src="/assets/icons/blocks.svg" /> Block
              </div>
              <dl>
                <dt>Block Number</dt>
                <dd>{block?.number}</dd>
                <dt>Block Hash</dt>
                <dd>{block?.hash}</dd>
                <dt>Created At</dt>
                <dd>
                  {block?.created_at &&
                    moment(block?.created_at).format(YY_MM_DD_HH_mm_ss)}{" "}
                  (
                  {block?.created_at && moment(block?.created_at).fromNow(true)}{" "}
                  ago )
                </dd>
                <dt>Parent block hash</dt>
                <dd>
                  <Link href={`/block/${block?.parent_hash}`}>
                    <a>{block?.parent_hash}</a>
                  </Link>
                </dd>
                <dt>Signer</dt>
                <dd>
                  <Link href={`/addr/${block?.miner}`}>
                    <a>{block?.miner}</a>
                  </Link>{" "}
                  {block?.extra && (
                    <>
                      (
                      <a
                        href={
                          block?.signerDetails?.url || "https://gochain.io/"
                        }
                        target="_blank"
                        rel="noreferrer"
                      >
                        {block?.extra?.vanity}
                      </a>
                      )
                    </>
                  )}
                </dd>
                <dt>Gas Limit</dt>
                {/* <dd>{{block.gas_limit | bigNumber}}</dd> */}
                <dd>{block?.gas_limit}</dd>
                <dt>Gas Used</dt>
                {/* <dd>{{block.gas_used | bigNumber}}</dd> */}
                <dd>{block?.gas_used}</dd>
                {/* <ng-container *ngIf="block.gas_fees"> */}
                {block?.gas_fees && (
                  <>
                    <dt>Gas Fees</dt>
                    <dd>
                      {/* {{block.gas_fees | weiToGO | bigNumber}} */}
                      {block?.gas_fees}
                      {/* <ng-container *ngIf="block.total_fees_burned" popover-title="block.total_fees_burned | weiToGO | bigNumber"> */}
                      (<img src="/assets/icons/fire.svg" /> burned)
                    </dd>
                  </>
                )}

                <dt>Transactions Count</dt>
                <dd>{block?.tx_count}</dd>
                <dt>Difficulty</dt>
                <dd>{block?.difficulty}</dd>
                <dt>Extra Data</dt>
                <dd>{block?.extra?.vanity}</dd>
                {block?.extra?.has_vote && (
                  <>
                    <dt>Vote</dt>
                    <dd>
                      {block?.extra?.auth ? "Add" : "Remove"}{" "}
                      {block?.extra?.is_voter_election ? "voter" : "signer"}
                      <Link href={`/addr/${block.extra.candidate}`}>
                        <a>{block?.extra?.candidate}</a>
                      </Link>
                      {block?.extra?.signerDetails && (
                        <>
                          (
                          <a
                            href={block.extra.signerDetails.url}
                            target="_blank"
                            rel="noreferrer"
                          >
                            {block?.extra?.signerDetails?.name}
                          </a>
                          )
                        </>
                      )}
                    </dd>
                  </>
                )}
              </dl>
            </div>
          </div>

          <div className="card mt-4">
            <div className="card-body">
              <div className="card-title">
                <img src="/assets/icons/blocks.svg" /> Transactions
              </div>
              {transactions?.length > 0 ? (
                <>
                  <table className="table">
                    <thead>
                      <tr>
                        <th className="w-4 border-0">Status</th>
                        <th className="w-20 border-0">Transaction hash</th>
                        <th className="w-20 border-0">Processed at</th>
                        <th className="w-20 border-0">From</th>
                        <th className="w-20 border-0">To</th>
                        <th className="w-16 border-0">Value (GO)</th>
                      </tr>
                    </thead>
                    <tbody>
                      {/* <tr *ngFor="let tx of transactions"> */}
                      {transactions.map((tx: any) => {
                        return (
                          <tr key={tx?.tx_hash}>
                            <td className="text-monospace text-truncate">
                              <span
                                className={
                                  tx.status
                                    ? "badge badge-success"
                                    : "badge badge-danger"
                                }
                              >
                                <small>
                                  {tx.status ? "Success" : "Failed"}
                                </small>
                              </span>
                            </td>
                            <td className="text-monospace text-truncate">
                              <Link href={`/tx/${tx?.tx_hash}`}>
                                <a className="ws-p">{tx?.tx_hash}</a>
                              </Link>
                            </td>
                            <td className="text-nowrap">
                              {tx?.created_at &&
                                moment(tx.created_at).format(
                                  YY_MM_DD_HH_mm_ss
                                )}{" "}
                              (
                              {tx?.created_at &&
                                moment(tx?.created_at).fromNow(true)}{" "}
                              ago )
                            </td>
                            <td className="text-monospace text-truncate">
                              <Link href={`/addr/${tx?.from}`}>
                                <a className="ws-p">{tx?.from}</a>
                              </Link>
                            </td>
                            <td className="text-monospace text-truncate">
                              <Link href={`/addr/${tx?.to}`}>
                                <a className="ws-p">{tx?.to}</a>
                              </Link>
                            </td>
                            <td>
                              {/* {{tx.value | weiToGO: false : true | bigNumber}} */}
                              {tx.value}
                            </td>
                          </tr>
                        );
                      })}
                    </tbody>
                  </table>
                  <div className="mt-4">
                    {/* <app-pagination [queryParam]="transactionQueryParams"></app-pagination> */}
                  </div>
                </>
              ) : (
                <div className="empty">No transactions</div>
              )}
            </div>
          </div>
        </div>
      </AppLayout>
    </div>
  );
};

export default BlockDetail;
