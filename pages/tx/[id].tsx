import {
  getRecentBlockNum,
  getTransactionTx,
} from "@Redux/actions/address/index";
import { hex2str, numberWithCommas, toGwei, weiToGO } from "@Utils/functions";
import { useDispatch, useSelector } from "react-redux";

import AppLayout from "@Components/Layout/AppLayout";
import Head from "next/head";
import Info from "@Components/Partials/Info";
import Link from "next/link";
import Loading from "@Components/Loading";
import React from "react";
import { YY_MM_DD_HH_mm_ss } from "@Utils/constants";
import moment from "moment";
import styles from "@Styles/Home.module.css";
import { useRouter } from "next/router";

const TransactionTx = () => {
  const router = useRouter();
  const dispatch = useDispatch();
  const { tx, isLoading, recentBlockNumber } =
    useSelector((state: any) => state.address) || {};
  const [queryId, $queryId] = React.useState<any | null>("");
  const [textAreaInput, $textAreaInput] = React.useState<any | null>(
    tx?.input_data
  );
  const [showInputRaw, $showInputRaw] = React.useState<any | null>(true);
  const [showUtf8, $showUtf8] = React.useState<any | null>(false);
  const [showLogsRaw, $showLogsRaw] = React.useState<any | null>(false);

  React.useEffect(() => {
    const { query } = router;
    if (query?.id) {
      const { id } = query;
      $queryId(id);
    }
  }, [router]);

  React.useEffect(() => {
    if (tx?.input_data) {
      $textAreaInput(tx?.input_data);
    }
  }, [tx]);

  React.useEffect(() => {
    if (queryId) {
      dispatch(getTransactionTx({ addrHash: queryId }));
    }
  }, [queryId]);

  React.useEffect(() => {
    const timer = setInterval(
      () => dispatch(getRecentBlockNum({ queryId })),
      10000
    );
    return () => clearInterval(timer);
  });

  React.useEffect(() => {
    if (queryId) {
      dispatch(getRecentBlockNum({ queryId }));
    }
  }, [queryId]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Block - GoChain Explorer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppLayout>
        <div className="container">
          {isLoading ? (
            <Loading />
          ) : (
            <>
              {tx ? (
                <div className="card">
                  <div className="card-body">
                    <div className="card-title">
                      <img src="../../../assets/icons/tx.svg" /> Transaction
                    </div>
                    <dl>
                      <dt>Transaction hash</dt>
                      <dd className="text-monospace">{tx?.tx_hash}</dd>
                      <dt>Status</dt>
                      <dd>
                        {tx?.block_number ? (
                          <div
                            className={`badge ${
                              tx?.status ? "badge-success" : "badge-danger"
                            }`}
                          >
                            {tx?.status ? "Success" : "Failed"}
                          </div>
                        ) : (
                          <div className="badge c--info">Pending</div>
                        )}
                      </dd>
                      {tx?.block_number && (
                        <>
                          <dt>Block number</dt>
                          <dd>
                            <Link href={`/block/${tx?.block_number}`}>
                              <a>{tx?.block_number}</a>
                            </Link>
                            {recentBlockNumber && (
                              <div className="badge badge-info ml-1">
                                {recentBlockNumber - tx?.block_number} Block
                                Confirmations
                              </div>
                            )}
                          </dd>
                        </>
                      )}
                      {tx?.created_at && (
                        <>
                          <dt>Processed at</dt>
                          <dd>
                            {moment(tx?.created_at).format(YY_MM_DD_HH_mm_ss)} (
                            {moment(tx?.created_at).fromNow()})
                          </dd>
                        </>
                      )}

                      {tx?.contract_address &&
                        tx.contract_address !==
                          "0x0000000000000000000000000000000000000000" && (
                          <>
                            <dt>Contract address</dt>
                            <dd>
                              <Link href={`/addr/${tx?.contract_address}`}>
                                <a className="text-monospace">
                                  {tx?.contract_address}
                                </a>
                              </Link>
                            </dd>
                          </>
                        )}

                      <dt>From</dt>
                      <dd>
                        <Link href={`/addr/${tx?.from}`}>
                          <a className="text-monospace">{tx?.from}</a>
                        </Link>
                      </dd>
                      {tx?.to && (
                        <>
                          <dt>To</dt>
                          <dd>
                            <Link href={`/addr/${tx?.to}`}>
                              <a className="text-monospace">{tx?.to}</a>
                            </Link>
                          </dd>
                        </>
                      )}
                      <dt>Value</dt>
                      <dd>{numberWithCommas(weiToGO(tx?.value))}</dd>
                      <dt>Gas price</dt>
                      <dd>{toGwei(tx?.gas_price)}</dd>
                      <dt>Gas limit</dt>
                      <dd>{numberWithCommas(tx?.gas_limit)}</dd>
                      {tx?.gas_fee && (
                        <>
                          <dt>Gas used</dt>
                          <dd>
                            {numberWithCommas(tx?.gas_fee / tx?.gas_price)}
                          </dd>
                        </>
                      )}
                      {tx?.gas_fee && (
                        <>
                          <dt>Gas fee</dt>
                          <dd>{numberWithCommas(weiToGO(tx?.gas_fee))}</dd>
                        </>
                      )}
                      <dt>Nonce</dt>
                      <dd>{tx?.nonce}</dd>
                      <dt></dt>
                      <dd></dd>
                    </dl>
                  </div>

                  <div className="card-footer">
                    <form>
                      <div className="form-group">
                        <label htmlFor="input_data">Input data</label>
                        <div className="btn-group btn-group-sm float-right">
                          {tx?.processedInputData && (
                            <button
                              className={`btn btn-primary ${
                                !showInputRaw && "active"
                              }`}
                              onClick={(e) => {
                                e.preventDefault();
                                $showInputRaw(false);
                              }}
                            >
                              Rich
                            </button>
                          )}
                          <button
                            className={`btn btn-primary ${
                              !showInputRaw && !showUtf8 && "active"
                            }`}
                            onClick={(e) => {
                              e.preventDefault();
                              let input = hex2str(tx?.input_data, false);
                              $textAreaInput(input);
                              $showInputRaw(true);
                              $showUtf8(false);
                            }}
                          >
                            HEX
                          </button>
                          <button
                            className={`btn btn-primary ${
                              showInputRaw && showUtf8 && "active"
                            }`}
                            onClick={(e) => {
                              e.preventDefault();
                              let input = hex2str(tx?.input_data, true);
                              $textAreaInput(input);
                              $showInputRaw(true);
                              $showUtf8(true);
                            }}
                          >
                            UTF-8
                          </button>
                        </div>
                        {showInputRaw ? (
                          <>
                            <textarea
                              className="form-control code mt-2"
                              id="input_data"
                              readOnly
                              rows={5}
                              value={textAreaInput}
                            />
                          </>
                        ) : (
                          <table className="table table-bordered">
                            <tbody>
                              <tr>
                                <td>
                                  <b>{tx.processedInputData?.title}</b>
                                  {tx?.processedInputData?.items?.length >
                                    0 && (
                                    <ul>
                                      {tx?.processedInputData?.items?.map(
                                        (item: any, index: string) => (
                                          <li key={index}>
                                            {item?.name && item?.name}:
                                            {item?.link ? (
                                              <>
                                                {item?.linkExternal ? (
                                                  <>
                                                    <a
                                                      className="text-monospace"
                                                      href={item?.link}
                                                      target="_blank"
                                                      rel="noreferrer"
                                                    >
                                                      {item?.value}
                                                    </a>
                                                  </>
                                                ) : (
                                                  <>
                                                    <a
                                                      className="text-monospace"
                                                      href={item?.link}
                                                    >
                                                      {item?.value}
                                                    </a>
                                                  </>
                                                )}
                                              </>
                                            ) : (
                                              <>
                                                <span className="text-monospace">
                                                  {item?.value}
                                                </span>
                                              </>
                                            )}
                                          </li>
                                        )
                                      )}
                                    </ul>
                                  )}
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        )}
                      </div>
                      <div className="form-group">
                        <label htmlFor="receipt_logs">Receipt Logs</label>
                        <div className="btn-group btn-group-sm float-right">
                          <button
                            className={`btn btn-primary ${
                              !showLogsRaw && "active"
                            }`}
                            onClick={(e) => {
                              e.preventDefault();
                              $showLogsRaw(false);
                            }}
                          >
                            Rich
                          </button>
                          <button
                            className={`btn btn-primary ${
                              showLogsRaw && "active"
                            }`}
                            onClick={(e) => {
                              e.preventDefault();
                              $showLogsRaw(true);
                            }}
                          >
                            JSON
                          </button>
                        </div>
                        <div className="mt-2">
                          {!showLogsRaw ? (
                            <>
                              <div className="mb-2">
                                <span id="red-box"></span> - removed
                              </div>
                              <table className="table table-bordered">
                                <thead>
                                  <tr>
                                    <th className="border-bottom-0">Index</th>
                                    <th className="border-bottom-0">
                                      Contract
                                    </th>
                                    <th className="border-bottom-0">Data</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  {tx?.processedLogs?.map(
                                    (log: any, index: string) => (
                                      <tr
                                        key={index}
                                        className={
                                          log?.removed && "table-secondary"
                                        }
                                      >
                                        <td>{log?.index}</td>
                                        <td>
                                          <Link
                                            href={`/addr/${log?.contract_address}`}
                                          >
                                            <a className="text-monospace">
                                              {log?.contract_address}
                                            </a>
                                          </Link>
                                        </td>
                                        <td>
                                          {log?.data?.map((data: any) => {
                                            return (
                                              <>
                                                <b>{data?.title}</b>
                                                <ul>
                                                  {data?.items?.map(
                                                    (
                                                      item: any,
                                                      index: string
                                                    ) => {
                                                      return (
                                                        <li key={index}>
                                                          {item?.name &&
                                                            item?.name}
                                                          :
                                                          {item?.link ? (
                                                            <a
                                                              className="text-monospace"
                                                              href="item.link"
                                                            >
                                                              {item?.value}
                                                            </a>
                                                          ) : (
                                                            <span className="text-monospace">
                                                              {item?.value}
                                                            </span>
                                                          )}
                                                        </li>
                                                      );
                                                    }
                                                  )}
                                                </ul>
                                              </>
                                            );
                                          })}
                                        </td>
                                      </tr>
                                    )
                                  )}
                                </tbody>
                              </table>
                            </>
                          ) : (
                            <>
                              <textarea
                                className="form-control code"
                                id="receipt_logs"
                                readOnly
                                rows={5}
                              >
                                {tx?.prettifiedLogs}
                              </textarea>
                            </>
                          )}
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
              ) : (
                <Info text="Transaction not found."></Info>
              )}
            </>
          )}
        </div>
      </AppLayout>
    </div>
  );
};

export default TransactionTx;
